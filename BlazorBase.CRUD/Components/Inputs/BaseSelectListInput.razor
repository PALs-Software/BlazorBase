@inherits BaseInput

@if (Model != null)
{
    @if (IsReadOnly)
    {
        <input type="text" value="@ReadOnlyDisplayValue" disabled class="form-control @InputClass" />
    }
    else
    {
        <Addons>
            <SelectList @ref="SelectList" Data="@Data" TItem="KeyValuePair<string, string>" TValue="string" TextField="(item) => item.Value" ValueField="(item) => item.Key" SelectedValue="SelectedValue" SelectedValueChanged="(x) => OnSelectedValueChangedAsync(x)" Class="@InputClass" Attributes="InputAttributes" />

            @if (IsForeignKeyProperty)
            {
                <BaseTypeBasedSelectList @ref="BaseSelectList"
                             BaseModelType="ForeignKeyBaseModelType"
                             Title="@Localizer["Search for {0}", ModelLocalizer[Property.Name]]"
                             OnSelectListClosed="AddEntryFromSelectListModalAsync" />

                <Addon AddonType="AddonType.End">
                    <Button Color="Color.Secondary" Clicked="OpenForeignKeySelectListModal">
                        <Blazorise.Icons.FontAwesome.Icon Name="IconName.SearchPlus" />
                    </Button>
                </Addon>
            }
        </Addons>
    }

    <div class="@FeedbackClass">
        @Feedback
    </div>
}