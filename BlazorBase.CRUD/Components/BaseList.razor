@typeparam TModel
@using BlazorBase.CRUD.Services
@using BlazorBase.Components

<h3>
    @PluralDisplayName
    <Button Color="Color.Success" Clicked="AddEntryAsync"><Icon Name="IconName.Add" /></Button>
</h3>

<table class="table table-hover">
    <thead>
        <tr>
            <th></th>
            @foreach (var caption in ColumnCaptions)
            {
                <th>@caption</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in Entries)
        {
            <tr>
                <td>
                    <Buttons>
                        <Button Color="Color.Primary" Clicked="(() => EditEntryAsync(entry))"><Icon Name="IconName.Edit" /></Button>
                        <Button Color="Color.Danger" Clicked="(() => RemoveEntryAsync(entry))"><Icon Name=" IconName.Delete" /></Button>
                    </Buttons>
                </td>

                @foreach (var property in VisibleProperties)
                {
                    <td>
                        @property.GetValue(entry)
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<BaseCard @ref="BaseCard" 
          Service="Service" 
          TModel="TModel"
          SingleDisplayName="@SingleDisplayName"

          OnCardClosed="OnCardClosedAsync"
          
          OnBeforeAddEntry="CardOnBeforeAddEntry"
          OnAfterAddEntry="CardOnAfterAddEntry"           
          OnBeforeUpdateEntry="CardOnBeforeUpdateEntry"
          OnAfterUpdateEntry="CardOnAfterUpdateEntry"
          OnBeforePropertyChanged="CardOnBeforePropertyChanged"
          OnAfterPropertyChanged="CardOnAfterPropertyChanged"

          />

<ConfirmDialog @ref="ConfirmDialog" Title="@ConfirmDialogDeleteTitle" ConfirmButtonText="@Localizer["ConfirmDelete"]" ConfirmButtonColor="Color.Danger" OnConfirmDialogClosed="OnConfirmDialogClosedAsync">
    <span>
        @ConfirmDialogDeleteMessage
    </span>
</ConfirmDialog>