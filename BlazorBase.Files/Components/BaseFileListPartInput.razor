@inherits BaseFileInput

@if (Model != null)
{
    <LoadingIndicator Visible="ShowLoadingIndicator">
        @Localizer["Uploading file..."]
        <Progress Size="Size.ExtraLarge" Margin="Margin.Is4.FromLeft.Is4.FromRight">
            <ProgressBar Value="UploadProgress" Animated="true" Striped="true">
                @UploadProgress %
            </ProgressBar>
        </Progress>
    </LoadingIndicator>

    <div class="@InputClass">
        <Row Margin="Margin.Is0">
            <Row Margin="Margin.Is0">
                <FileEdit @ref="FileEdit" Multiple="false" Filter="@FileFilter" Changed="async (args) => await OnValueChangedAsync(args)" Progressed="OnUploadProgressed" Class="@InputClass" AutoReset="false" />
            </Row>
            @if (Property.CanWrite)
            {
                <Row Float="Float.Right" Margin="Margin.Is0">
                    <Button Color="Color.Danger" Clicked="DeleteAttachedFilePropertyAsync" Margin="Margin.Is3.FromTop">@Localizer["Delete"]</Button>
                </Row>
            }
            <Row Margin="Margin.Is0.OnAll.Is3.FromTop">
                <BaseFileListDisplay Model="Model" Property="Property" Service="Service" ModelLocalizer="ModelLocalizer" />
            </Row>
        </Row>
    </div>
    <div class="@FeedbackClass">
        @Feedback
    </div>
}